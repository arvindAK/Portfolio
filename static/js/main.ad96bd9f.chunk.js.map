{"version":3,"sources":["components/About.js","components/Tile.js","components/Nav.js","components/Projects.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["About","react_default","a","createElement","className","src","alt","Tile","_ref","projects","type","Fragment","concat","map","proj","i","key","tilt_default","options","max","href","link","target","rel","img","title","description","flow","hosted","frontend","style","database","backend","Nav","dependencies","Footer","App","components_Nav","id","components_Tile","components_About","components_Footer","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ad96bd9f.chunk.js","sourcesContent":["import React from \"react\";\n\nconst About = () => (\n  <div>\n    <div>\n      <h2>About Me</h2>\n      <div className=\"aboutMeContainer\">\n        <div className=\"intro\">\n          <p>\n            Website design intrigues me, enabling users to perceive data in\n            multiple dimensions to build a latticework of tools.\n          </p>\n          <blockquote>\n            \"I suppose it is tempting, if the only tool you have is a hammer, to\n            treat everything as if it were a nail.\"\n          </blockquote>\n          <span className=\"quote_author\">Abraham Maslow</span>\n          <p>\n            Learning is a life long passion of mine, since not only does it open\n            new doors but also revaluate what I already know in a new light!\n          </p>\n        </div>\n        <img className=\"profile\" src=\"img/me.png\" alt=\"profile\" />\n        <div className=\"hobbies\">\n          <h3>Interests</h3>\n          <ul>\n            <li className=\"print\">\n              3D Printing\n              <div className=\"printer\">\n                <div className=\"printerFrame\" />\n                <div className=\"printerHead\" />\n              </div>\n            </li>\n            <li className=\"cycle\">\n              Cycling\n              <div className=\"bike\">\n                <div className=\"frame\" />\n                <div className=\"fwheel\" />\n                <div className=\"bwheel\" />\n              </div>\n            </li>\n            <li className=\"garden\">\n              Gardening\n              <div className=\"gardener\">\n                <div className=\"stem\" />\n                <div className=\"leaf1\" />\n                <div className=\"leaf2\" />\n              </div>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nexport default About;\n","import React from \"react\";\nimport Tilt from \"react-tilt\";\n\nconst Tile = ({ projects, type }) => (\n  <React.Fragment>\n    <h3>{type} Projects</h3>\n    <div className={`container ${type}`}>\n      {projects.map((proj, i) => (\n        <div className=\"card\" key={i}>\n          <Tilt className=\"tilt\" options={{ max: 25 }}>\n            <a href={proj.link} target=\"_blank\" rel=\"noopener noreferrer\">\n              <img src={proj.img} alt={proj.title} />\n              <h2 className=\"project-title\">{proj.title}</h2>\n              <p>{proj.description}</p>\n            </a>\n          </Tilt>\n          {type === \"Front End\" && (\n            <div className=\"popup\">\n              <h4>\n                Hosted: <span>{proj.flow.hosted}</span>\n              </h4>\n              <h4>\n                Front End: <span>{proj.flow.frontend}</span>\n              </h4>\n              <h4>\n                Styled: <span>{proj.flow.style}</span>\n              </h4>\n            </div>\n          )}\n          {type === \"Back End\" && (\n            <div className=\"popup\">\n              <h4>\n                Hosted: <span>{proj.flow.hosted}</span>\n              </h4>\n              <h4>\n                Database: <span>{proj.flow.database}</span>\n              </h4>\n              <h4>\n                Back End: <span>{proj.flow.backend}</span>\n              </h4>\n              <h4>\n                Front End: <span>{proj.flow.frontend}</span>\n              </h4>\n            </div>\n          )}\n        </div>\n      ))}\n    </div>\n  </React.Fragment>\n);\n\nexport default Tile;\n","import React from \"react\";\n\nconst Nav = () => (\n  <nav className=\"hero-bg\">\n    <ul>\n      <li>\n        <a href=\"#about\">About Me</a>\n      </li>\n    </ul>\n  </nav>\n);\n\nexport default Nav;\n","export const frontend = [\n  {\n    title: \"CryptoDash\",\n    dependencies: [\"react\", \"react highcharts\", \"styled components\"],\n    description: \"Track the price of favorite CryptoCurrencies over time.\",\n    link: \"https://arvindak.github.io/CryptoDash/\",\n    img: \"img/react/cryptoDash.png\",\n    flow: {\n      hosted: \"Github Pages\",\n      frontend: \"React\",\n      style: \"Styled Components\"\n    }\n  },\n  {\n    title: \"Slack Messenger\",\n    dependencies: [\n      \"react\",\n      \"firebase\",\n      \"redux\",\n      \"react router dom\",\n      \"semantic UI react\"\n    ],\n    description: \"Slack style messenger app.\",\n    link: \"https://react-slack-clone-3b5b0.firebaseapp.com/\",\n    img: \"img/firebase/slack.png\",\n    flow: {\n      hosted: \"Firebase\",\n      frontend: \"React & Redux\",\n      style: \"Semantic UI React\"\n    }\n  },\n  {\n    title: \"Recipe App\",\n    dependencies: [\"react\", \"bootstrap\"],\n    description:\n      \"Uses the Food2Fork API to look up recipes containing an ingredient.\",\n    link: \"https://arvindak.github.io/recipe-app/\",\n    img: \"img/react/recipe-app.png\",\n    flow: {\n      hosted: \"Github Pages\",\n      frontend: \"React\",\n      style: \"Bootstrap\"\n    }\n  }\n];\n\nexport const backend = [\n  {\n    title: \"Amazon Prime Movie Filter\",\n    dependencies: [\"react\", \"express\", \"postgresql\"],\n    description:\n      \"Filter Amazon Prime movies via IMDB, Amazon star rating, number of ratings, genre and year. Scrapped data using selenium.\",\n    link: \"https://morning-crag-36301.herokuapp.com/#\",\n    img: \"img/fullStack/movieFilter.png\",\n    flow: {\n      hosted: \"Heroku\",\n      database: \"PostgreSQL\",\n      backend: \"Express\",\n      frontend: \"React\"\n    }\n  },\n  {\n    title: \"Scoop, Search Engine\",\n    dependencies: [\"PHP\", \"MySQL\"],\n    description: \"A PHP web scraper and search engine.\",\n    link: \"https://quiet-mesa-13674.herokuapp.com/\",\n    img: \"img/fullStack/scoop.png\",\n    flow: {\n      hosted: \"Heroku\",\n      database: \"MySQL\",\n      backend: \"PHP\",\n      frontend: \"CSS\"\n    }\n  },\n  {\n    title: \"Waitrose Recipe Finder\",\n    dependencies: [\"react\", \"express\", \"postgresql\", \"recharts\"],\n    description:\n      \"Sort recipes via nutritional content and filter by dietary requirements or food type.Scrapped data using selenium.\",\n    link: \"https://fast-eyrie-78022.herokuapp.com/\",\n    img: \"img/fullStack/recipeSort.png\",\n    flow: {\n      hosted: \"Heroku\",\n      database: \"PostgreSQL\",\n      backend: \"Express\",\n      frontend: \"React\"\n    }\n  }\n];\n\nexport const fireBaseProjects = [];\n","import React from \"react\";\n\nconst Footer = () => (\n  <footer>\n    <a href=\"https://www.thingiverse.com/HonestAbe/designs\">\n      <img\n        src=\"https://img.icons8.com/ios/50/000000/wrench.png\"\n        title=\"Thingiverse\"\n        alt=\"Thingiverse\"\n      />\n    </a>\n    <a href=\"https://github.com/arvindAK\">\n      <img\n        src=\"https://img.icons8.com/ios/50/000000/github-filled.png\"\n        title=\"Github\"\n        alt=\"Github\"\n      />\n    </a>\n    <a href=\"mailto:arvindofkumar153@gmail.com\">\n      <img\n        src=\"https://img.icons8.com/carbon-copy/100/000000/paper-plane.png\"\n        alt=\"Mail\"\n        title=\"Mail\"\n      />\n    </a>\n  </footer>\n);\n\nexport default Footer;\n","import React, { Component } from \"react\";\nimport About from \"./components/About\";\nimport Tile from \"./components/Tile\";\nimport Nav from \"./components/Nav\";\nimport { backend } from \"./components/Projects\";\nimport { frontend } from \"./components/Projects\";\nimport Footer from \"./components/Footer\";\n\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <section id=\"portfolio\">\n          <h1>Portfolio</h1>\n          <Tile projects={frontend} type={\"Front End\"} />\n          <Tile projects={backend} type={\"Back End\"} />\n          <span>\n            The backend projects are deployed on Heroku, so please allow a few\n            seconds for them to initially load.\n          </span>\n        </section>\n        <section id=\"about\">\n          <About />\n        </section>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}